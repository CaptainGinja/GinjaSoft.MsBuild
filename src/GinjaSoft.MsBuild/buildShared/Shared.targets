<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target Name="SharedShowProperties"
          BeforeTargets="CopyKeyFiles">
    <Message Importance="High" Text="[$(TargetFramework)]:TARGET: SharedShowProperties" />

    <Message Importance="High" Text="  ProjectDir = $(ProjectDir)" />
    <Message Importance="High" Text="  MSBuildProjectDirectory = $(MSBuildProjectDirectory)" />
    <Message Importance="High" Text="  SolutionDir = $(SolutionDir)" />
    <Message Importance="High" Text="  ProjectName = $(ProjectName)" />
    <Message Importance="High" Text="  MSBuildProjectName = $(MSBuildProjectName)" />
    <Message Importance="High" Text="  OutputPath = $(OutputPath)" />
    <Message Importance="High" Text="  LocalKeysDir = $(LocalKeysDir)" />
    <Message Importance="High" Text="  RemoteKeysDir = $(RemoteKeysDir)" />
    <Message Importance="High" Text="  Configuration = $(Configuration)" />
    <Message Importance="High" Text="  TargetFramework = $(TargetFramework)" />
    <Message Importance="High" Text="  NuGetPackageRoot = $(NuGetPackageRoot)" />
    <Message Importance="High" Text="  GitVersion = $(GitVersion)" />
    <Message Importance="High" Text="  IsPackable = $(IsPackable)" />
    <Message Importance="High" Text="  PublishPackageTo = $(PublishPackageTo)" />
    <Message Importance="High" Text="  ClearLocalPackageCache = $(ClearLocalPackageCache)" />
    <Message Importance="High" Text="  GinjaSoftTasksAssemblyFilePath = $(GinjaSoftTasksAssemblyFilePath)" />
  </Target>
  
  <UsingTask TaskName="GinjaSoft.MsBuild.Tasks.GitVersionTask"
             AssemblyFile="$(GinjaSoftTasksAssemblyFilePath)" />

  <!-- Possibly aquire keys for signing -->
  <Target Name="CopyKeyFiles"
          BeforeTargets="SignAssembly"
          DependsOnTargets="SharedShowProperties"
          Condition="$(SignAssembly) == 'true' AND !Exists('$(LocalKeysDir)GinjaSoft.snk')">
    <Message Importance="High" Text="[$(TargetFramework)]:TARGET: CopyKeyFiles" />

    <Message Importance="High" Text="  Copying key files from $(RemoteKeysDir) to $(LocalKeysDir)" />
    <MakeDir Directories="$(LocalKeysDir)"/>
    <Copy SourceFiles="$(RemoteKeysDir)GinjaSoft.snk" DestinationFolder="$(LocalKeysDir)" />
    <Copy SourceFiles="$(RemoteKeysDir)GinjaSoftPublicKey.txt" DestinationFolder="$(LocalKeysDir)" />
    <Copy SourceFiles="$(RemoteKeysDir)MoqPublicKey.txt" DestinationFolder="$(LocalKeysDir)" />
  </Target>
  
  <!-- Possibly sign the assembly -->
  <Target Name="SignAssembly"
          BeforeTargets="InternalsVisibleToSigned"
          Condition="$(SignAssembly) == 'true'">
    <Message Importance="High" Text="[$(TargetFramework)]:TARGET: SignAssembly" />

    <PropertyGroup>
      <!-- This is the property that tells MSBuild the key file to use to sign the assembly -->
      <AssemblyOriginatorKeyFile>$(LocalKeysDir)GinjaSoft.snk</AssemblyOriginatorKeyFile>
    </PropertyGroup>
  </Target>
  
  <!-- When we are signing the assembly -->
  <Target Name="InternalsVisibleToSigned"
          BeforeTargets="InternalsVisibleToUnsigned"
          Condition="$(SignAssembly) == 'true'">
    <Message Importance="High" Text="[$(TargetFramework)]:TARGET: InternalsVisibleToSigned" />

    <ReadLinesFromFile File="$(LocalKeysDir)GinjaSoftPublicKey.txt">
      <Output TaskParameter="Lines" PropertyName="GinjaSoftPublicKey"/>
    </ReadLinesFromFile>
    <ReadLinesFromFile File="$(LocalKeysDir)MoqPublicKey.txt">
      <Output TaskParameter="Lines" PropertyName="MoqPublicKey"/>
    </ReadLinesFromFile>
    <PropertyGroup>
      <GinjaSoftExtra>,PublicKey=$(GinjaSoftPublicKey)</GinjaSoftExtra>
      <MoqExtra>,PublicKey=$(MoqPublicKey)</MoqExtra>
    </PropertyGroup>
  </Target>

  <!-- When we are not signing the assembly -->
  <Target Name="InternalsVisibleToUnsigned"
          BeforeTargets="InternalsVisibleTo"
          Condition="$(SignAssembly) != 'true'">
    <Message Importance="High" Text="[$(TargetFramework)]:TARGET: InternalsVisibleToUnsigned" />

    <PropertyGroup>
      <GinjaSoftExtra></GinjaSoftExtra>
      <MoqExtra></MoqExtra>
    </PropertyGroup>
  </Target>
  
  <!-- Add InternalsVisibleTo assembly attributes to support unit testing -->
  <Target Name="InternalsVisibleTo"
          BeforeTargets="GitVersion">
    <Message Importance="High" Text="[$(TargetFramework)]:TARGET: InternalsVisibleTo" />

    <Message Importance="High" Text="  GinjaSoftExtra = $(GinjaSoftExtra)" />
    <Message Importance="High" Text="  MoqExtra = $(MoqExtra)" />

    <ItemGroup>
      <!-- Assumes that our unit test project is named (ProjectName).Tests -->
      <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
        <_Parameter1>$(ProjectName).Tests$(GinjaSoftExtra)</_Parameter1>
      </AssemblyAttribute>
      <!-- Automatically expose internals to Moq -->
      <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
        <_Parameter1>DynamicProxyGenAssembly2$(MoqExtra)</_Parameter1>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>

  <!-- Call our custom GitVersion MSBuild task to extract version info from Git and set the appropriate properties -->
  <Target Name="GitVersion"
          BeforeTargets="CoreCompile"
          Condition="$(GitVersion) == 'true'">
    <Message Importance="High" Text="[$(TargetFramework)]:TARGET: GitVersion" />

    <GitVersionTask RepoPath="$(SolutionDir)">
      <Output TaskParameter="Version" PropertyName="Version" />
      <Output TaskParameter="FileVersion" PropertyName="FileVersion" />
      <Output TaskParameter="InformationalVersion" PropertyName="InformationalVersion" />
    </GitVersionTask>

    <Message Importance="High" Text="  Version = $(Version)" />
    <Message Importance="High" Text="  FileVersion = $(FileVersion)" />
    <Message Importance="High" Text="  InformationalVersion = $(InformationalVersion)" />
  </Target>
  
</Project>

